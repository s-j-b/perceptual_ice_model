<!-- 
     Example launch file for octomap_server mapping: 
     Listens to incoming PointCloud2 data and incrementally builds an octomap. 
     The data is sent out in different representations. 
     Copy this file into your workspace and adjust as needed, see
     www.ros.org/wiki/octomap_server for details  
-->
<launch>



  <!-- Transforms
  
  change from episcan to episcan_optical
-->
  
  <node pkg="octomap_server" type="octomap_server_node" name="octomap_server" output="screen">
    <param name="resolution" value="0.005" />
    
    <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
    <param name="frame_id" type="string" value="odom" />
    
    <!-- maximum range to integrate (speedup!) -->
    <param name="sensor_model/max_range" value="100.0" />
    
    <!-- data source to integrate (PointCloud2) -->
    <remap from="cloud_in" to="/episcan_points/output" />

    <param name="base_frame_id" type="string" value="base_link" />
    <param name="colored_map" value="true" />      
    <param name="height_map" value="false" />      
    <param name="sensor_model/hit" value="0.9" />   
    <param name="sensor_model/miss" value="0.4" />
    <param name="sensor_model/min" value="0.12" />                   
    <param name="sensor_model/max" value="0.97" />    
    <param name="latch" value="false" />          
  </node>
</launch>
